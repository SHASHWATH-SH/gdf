{"ast":null,"code":"var _jsxFileName = \"E:\\\\gdg-project\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = ({\n  events,\n  setEvents,\n  registerStudent,\n  unregisterStudent,\n  getStudentRegistrations,\n  onLogout,\n  user\n}) => {\n  _s();\n  var _events$find;\n  const [registeredEvents, setRegisteredEvents] = useState([]);\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  const [isLoadingRegistrations, setIsLoadingRegistrations] = useState(true);\n  const [registrationForm, setRegistrationForm] = useState({\n    name: \"\",\n    department: \"\",\n    usn: \"\",\n    email: \"\"\n  });\n  const navigate = useNavigate();\n\n  // Load user's registrations on component mount\n  useEffect(() => {\n    const loadRegistrations = async () => {\n      try {\n        const userEmail = (user === null || user === void 0 ? void 0 : user.email) || registrationForm.email;\n        if (userEmail) {\n          const registrations = await getStudentRegistrations(userEmail);\n          setRegisteredEvents(registrations);\n        }\n      } catch (error) {\n        console.error('Failed to load registrations:', error);\n      } finally {\n        setIsLoadingRegistrations(false);\n      }\n    };\n    loadRegistrations();\n  }, [user, getStudentRegistrations]);\n  const handleLogout = () => {\n    onLogout();\n    navigate(\"/login\");\n  };\n  const handleRegister = async eventId => {\n    if (registeredEvents.includes(eventId)) {\n      // Unregister\n      try {\n        await unregisterStudent(eventId, (user === null || user === void 0 ? void 0 : user.email) || registrationForm.email);\n        setRegisteredEvents(prev => prev.filter(id => id !== eventId));\n\n        // Update the events state to reflect the unregistration\n        setEvents(events.map(event => event.id === eventId ? {\n          ...event,\n          registeredStudents: Math.max((event.registeredStudents || 0) - 1, 0)\n        } : event));\n        alert('Successfully unregistered from the event!');\n      } catch (error) {\n        alert('Failed to unregister. Please try again.');\n      }\n    } else {\n      // Show registration form with user's email pre-filled\n      setSelectedEventId(eventId);\n      setRegistrationForm({\n        name: \"\",\n        department: \"\",\n        usn: \"\",\n        email: (user === null || user === void 0 ? void 0 : user.email) || \"\"\n      });\n      setShowRegistrationForm(true);\n    }\n  };\n  const handleRegistrationSubmit = async e => {\n    e.preventDefault();\n    if (!selectedEventId) return;\n\n    // Validate all required fields\n    if (!registrationForm.name || !registrationForm.department || !registrationForm.usn || !registrationForm.email) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    console.log('Submitting registration:', {\n      eventId: selectedEventId,\n      ...registrationForm\n    });\n    try {\n      console.log('Calling registerStudent with:', {\n        selectedEventId,\n        registrationForm\n      });\n      const result = await registerStudent(selectedEventId, registrationForm);\n      console.log('Registration result:', result);\n\n      // Add event to registered events\n      setRegisteredEvents(prev => {\n        const newRegisteredEvents = [...prev, selectedEventId];\n        console.log('Updated registered events:', newRegisteredEvents);\n        return newRegisteredEvents;\n      });\n\n      // Update the events state to reflect the new registration\n      setEvents(events.map(event => event.id === selectedEventId ? {\n        ...event,\n        registeredStudents: (event.registeredStudents || 0) + 1\n      } : event));\n\n      // Reset form and close modal\n      setRegistrationForm({\n        name: \"\",\n        department: \"\",\n        usn: \"\",\n        email: (user === null || user === void 0 ? void 0 : user.email) || \"\"\n      });\n      setShowRegistrationForm(false);\n      setSelectedEventId(null);\n      alert(`✅ Successfully registered for the event!\\nName: ${registrationForm.name}\\nUSN: ${registrationForm.usn}`);\n    } catch (error) {\n      console.error('Registration error:', error);\n      console.error('Error details:', JSON.stringify(error, null, 2));\n      if (error.error) {\n        alert(`Registration failed: ${error.error}`);\n      } else if (error.message) {\n        alert(`Registration failed: ${error.message}`);\n      } else {\n        alert('Failed to register. Please try again.');\n      }\n    }\n  };\n  const handleDownloadMaterial = (fileName, type) => {\n    console.log('Download request:', {\n      fileName,\n      type\n    });\n    console.log('Available events:', events.map(e => ({\n      id: e.id,\n      slides: e.slides,\n      recording: e.recording\n    })));\n\n    // Find the event that contains this material\n    const event = events.find(e => type === 'slide' && e.slides === fileName || type === 'recording' && e.recording === fileName);\n    console.log('Found event:', event);\n    if (!event) {\n      alert('❌ File not found!');\n      return;\n    }\n\n    // Get the actual file data\n    const fileData = type === 'slide' ? event.slides_data : event.recording_data;\n    const fileType = type === 'slide' ? event.slides_type : event.recording_type;\n    console.log('File details:', {\n      fileName,\n      fileData: fileData ? `Data present (${fileData.length} chars)` : 'No data',\n      fileType,\n      eventId: event.id,\n      type\n    });\n    if (!fileData) {\n      alert('❌ File data not available!');\n      return;\n    }\n\n    // Convert base64 to blob\n    const base64Response = fetch(fileData);\n    base64Response.then(res => res.blob()).then(blob => {\n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = fileName;\n\n      // Add file size information\n      const fileSize = (blob.size / 1024).toFixed(1);\n      console.log(`Downloading ${type} file: ${fileName} (${fileSize} KB)`);\n\n      // Trigger download\n      document.body.appendChild(link);\n      link.click();\n\n      // Cleanup\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n\n      // Show success message with file size\n      alert(`✅ Downloaded ${type}: ${fileName}\\nFile size: ${fileSize} KB`);\n    }).catch(error => {\n      console.error('Download error:', error);\n      alert('❌ Error downloading file!');\n    });\n  };\n  const isRegistered = eventId => {\n    // Check if the current user is registered for this event\n    const registered = registeredEvents.includes(eventId);\n    console.log(`Event ${eventId} registered:`, registered, 'Registered events:', registeredEvents);\n    return registered;\n  };\n  if (isLoadingRegistrations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GDG Connect - Student Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '50vh',\n          fontSize: '1.2rem',\n          color: '#64748b'\n        },\n        children: \"Loading your registrations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GDG Connect - Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: events.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registered Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: registeredEvents.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Available Materials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: events.filter(event => event.slides || event.recording).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), showRegistrationForm && selectedEventId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Register for Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"registration-info\",\n            children: [\"Event: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: (_events$find = events.find(e => e.id === selectedEventId)) === null || _events$find === void 0 ? void 0 : _events$find.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.9rem',\n              color: '#64748b',\n              marginBottom: '1rem'\n            },\n            children: \"Please fill in your details to register for this event.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegistrationSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: registrationForm.name,\n              onChange: e => setRegistrationForm({\n                ...registrationForm,\n                name: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Department\",\n              value: registrationForm.department,\n              onChange: e => setRegistrationForm({\n                ...registrationForm,\n                department: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"USN (University Serial Number)\",\n              value: registrationForm.usn,\n              onChange: e => setRegistrationForm({\n                ...registrationForm,\n                usn: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email Address\",\n              value: registrationForm.email,\n              onChange: e => setRegistrationForm({\n                ...registrationForm,\n                email: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  setShowRegistrationForm(false);\n                  setSelectedEventId(null);\n                  setRegistrationForm({\n                    name: \"\",\n                    department: \"\",\n                    usn: \"\",\n                    email: \"\"\n                  });\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-grid\",\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `event-card ${isRegistered(event.id) ? 'registered' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), isRegistered(event.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"registered-badge\",\n                children: \"Registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uD83D\\uDCC5 \", event.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uD83D\\uDCCD \", event.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-materials\",\n              children: [event.slides && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"material-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-badge slides\",\n                  children: \"\\uD83D\\uDCC4 Slides Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadMaterial(event.slides, 'slide'),\n                  className: \"material-download-btn\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this), event.recording && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"material-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-badge recording\",\n                  children: \"\\uD83C\\uDFA5 Recording Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadMaterial(event.recording, 'recording'),\n                  className: \"material-download-btn\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRegister(event.id),\n                className: isRegistered(event.id) ? 'unregister-btn' : 'register-btn',\n                children: isRegistered(event.id) ? '❌ Unregister' : '✅ Register'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), events.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-events\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events available at the moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"9XmFP8LN+H2LFQM2d2JGYB8G9wQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["useEffect","useState","useNavigate","jsxDEV","_jsxDEV","StudentDashboard","events","setEvents","registerStudent","unregisterStudent","getStudentRegistrations","onLogout","user","_s","_events$find","registeredEvents","setRegisteredEvents","showRegistrationForm","setShowRegistrationForm","selectedEventId","setSelectedEventId","isLoadingRegistrations","setIsLoadingRegistrations","registrationForm","setRegistrationForm","name","department","usn","email","navigate","loadRegistrations","userEmail","registrations","error","console","handleLogout","handleRegister","eventId","includes","prev","filter","id","map","event","registeredStudents","Math","max","alert","handleRegistrationSubmit","e","preventDefault","log","result","newRegisteredEvents","JSON","stringify","message","handleDownloadMaterial","fileName","type","slides","recording","find","fileData","slides_data","recording_data","fileType","slides_type","recording_type","length","base64Response","fetch","then","res","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","fileSize","size","toFixed","body","appendChild","click","removeChild","revokeObjectURL","catch","isRegistered","registered","className","children","_jsxFileName","lineNumber","columnNumber","onClick","style","display","justifyContent","alignItems","height","fontSize","color","title","marginBottom","onSubmit","placeholder","value","onChange","target","required","description","date","location","_c","$RefreshReg$"],"sources":["E:/gdg-project/frontend/src/pages/StudentDashboard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Student {\n  id: number;\n  name: string;\n  department: string;\n  usn: string;\n  email: string;\n  registered_date: string;\n}\n\ninterface Event {\n  id: number;\n  title: string;\n  description: string;\n  date: string;\n  location: string;\n  registeredStudents: number;\n  slides?: string;\n  slides_data?: string;\n  slides_type?: string;\n  recording?: string;\n  recording_data?: string;\n  recording_type?: string;\n}\n\ninterface StudentDashboardProps {\n  events: Event[];\n  setEvents: React.Dispatch<React.SetStateAction<Event[]>>;\n  registerStudent: (eventId: number, studentData: { name: string; department: string; usn: string; email: string }) => Promise<void>;\n  unregisterStudent: (eventId: number, email: string) => Promise<void>;\n  getStudentRegistrations: (email: string) => Promise<number[]>;\n  onLogout: () => void;\n  user: any;\n}\n\nconst StudentDashboard: React.FC<StudentDashboardProps> = ({ \n  events, \n  setEvents, \n  registerStudent, \n  unregisterStudent,\n  getStudentRegistrations,\n  onLogout,\n  user\n}) => {\n  const [registeredEvents, setRegisteredEvents] = useState<number[]>([]);\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState<number | null>(null);\n  const [isLoadingRegistrations, setIsLoadingRegistrations] = useState(true);\n  const [registrationForm, setRegistrationForm] = useState({\n    name: \"\",\n    department: \"\",\n    usn: \"\",\n    email: \"\"\n  });\n\n  const navigate = useNavigate();\n\n  // Load user's registrations on component mount\n  useEffect(() => {\n    const loadRegistrations = async () => {\n      try {\n        const userEmail = user?.email || registrationForm.email;\n        if (userEmail) {\n          const registrations = await getStudentRegistrations(userEmail);\n          setRegisteredEvents(registrations);\n        }\n      } catch (error) {\n        console.error('Failed to load registrations:', error);\n      } finally {\n        setIsLoadingRegistrations(false);\n      }\n    };\n\n    loadRegistrations();\n  }, [user, getStudentRegistrations]);\n\n  const handleLogout = () => {\n    onLogout();\n    navigate(\"/login\");\n  };\n\n  const handleRegister = async (eventId: number) => {\n    if (registeredEvents.includes(eventId)) {\n      // Unregister\n      try {\n        await unregisterStudent(eventId, user?.email || registrationForm.email);\n        setRegisteredEvents(prev => prev.filter(id => id !== eventId));\n        \n        // Update the events state to reflect the unregistration\n        setEvents(events.map(event => \n          event.id === eventId \n            ? { ...event, registeredStudents: Math.max((event.registeredStudents || 0) - 1, 0) }\n            : event\n        ));\n        \n        alert('Successfully unregistered from the event!');\n      } catch (error) {\n        alert('Failed to unregister. Please try again.');\n      }\n    } else {\n      // Show registration form with user's email pre-filled\n      setSelectedEventId(eventId);\n      setRegistrationForm({\n        name: \"\",\n        department: \"\",\n        usn: \"\",\n        email: user?.email || \"\"\n      });\n      setShowRegistrationForm(true);\n    }\n  };\n\n  const handleRegistrationSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!selectedEventId) return;\n\n    // Validate all required fields\n    if (!registrationForm.name || !registrationForm.department || !registrationForm.usn || !registrationForm.email) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    console.log('Submitting registration:', { eventId: selectedEventId, ...registrationForm });\n\n    try {\n      console.log('Calling registerStudent with:', { selectedEventId, registrationForm });\n      const result = await registerStudent(selectedEventId, registrationForm);\n      console.log('Registration result:', result);\n\n      // Add event to registered events\n      setRegisteredEvents(prev => {\n        const newRegisteredEvents = [...prev, selectedEventId];\n        console.log('Updated registered events:', newRegisteredEvents);\n        return newRegisteredEvents;\n      });\n\n      // Update the events state to reflect the new registration\n      setEvents(events.map(event => \n        event.id === selectedEventId \n          ? { ...event, registeredStudents: (event.registeredStudents || 0) + 1 }\n          : event\n      ));\n\n      // Reset form and close modal\n      setRegistrationForm({ name: \"\", department: \"\", usn: \"\", email: user?.email || \"\" });\n      setShowRegistrationForm(false);\n      setSelectedEventId(null);\n\n      alert(`✅ Successfully registered for the event!\\nName: ${registrationForm.name}\\nUSN: ${registrationForm.usn}`);\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      console.error('Error details:', JSON.stringify(error, null, 2));\n      if (error.error) {\n        alert(`Registration failed: ${error.error}`);\n      } else if (error.message) {\n        alert(`Registration failed: ${error.message}`);\n      } else {\n        alert('Failed to register. Please try again.');\n      }\n    }\n  };\n\n  const handleDownloadMaterial = (fileName: string, type: 'slide' | 'recording') => {\n    console.log('Download request:', { fileName, type });\n    console.log('Available events:', events.map(e => ({ id: e.id, slides: e.slides, recording: e.recording })));\n    \n    // Find the event that contains this material\n    const event = events.find(e => \n      (type === 'slide' && e.slides === fileName) || \n      (type === 'recording' && e.recording === fileName)\n    );\n    \n    console.log('Found event:', event);\n    \n    if (!event) {\n      alert('❌ File not found!');\n      return;\n    }\n    \n    // Get the actual file data\n    const fileData = type === 'slide' ? event.slides_data : event.recording_data;\n    const fileType = type === 'slide' ? event.slides_type : event.recording_type;\n\n    console.log('File details:', {\n      fileName,\n      fileData: fileData ? `Data present (${fileData.length} chars)` : 'No data',\n      fileType,\n      eventId: event.id,\n      type\n    });\n    \n    if (!fileData) {\n      alert('❌ File data not available!');\n      return;\n    }\n    \n    // Convert base64 to blob\n    const base64Response = fetch(fileData);\n    base64Response.then(res => res.blob()).then(blob => {\n      // Create download link\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = fileName;\n      \n      // Add file size information\n      const fileSize = (blob.size / 1024).toFixed(1);\n      console.log(`Downloading ${type} file: ${fileName} (${fileSize} KB)`);\n      \n      // Trigger download\n      document.body.appendChild(link);\n      link.click();\n      \n      // Cleanup\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      // Show success message with file size\n      alert(`✅ Downloaded ${type}: ${fileName}\\nFile size: ${fileSize} KB`);\n    }).catch(error => {\n      console.error('Download error:', error);\n      alert('❌ Error downloading file!');\n    });\n  };\n\n  const isRegistered = (eventId: number) => {\n    // Check if the current user is registered for this event\n    const registered = registeredEvents.includes(eventId);\n    console.log(`Event ${eventId} registered:`, registered, 'Registered events:', registeredEvents);\n    return registered;\n  };\n\n  if (isLoadingRegistrations) {\n    return (\n      <div className=\"dashboard\">\n        <header className=\"dashboard-header\">\n          <h1>GDG Connect - Student Dashboard</h1>\n          <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n        </header>\n        <div className=\"dashboard-content\" style={{ \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center', \n          height: '50vh',\n          fontSize: '1.2rem',\n          color: '#64748b'\n        }}>\n          Loading your registrations...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <h1>GDG Connect - Student Dashboard</h1>\n        <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n      </header>\n\n      <div className=\"dashboard-content\">\n        <div className=\"dashboard-stats\">\n          <div className=\"stat-card\">\n            <h3>Total Events</h3>\n            <p>{events.length}</p>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Registered Events</h3>\n            <p>{registeredEvents.length}</p>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Available Materials</h3>\n            <p>{events.filter(event => event.slides || event.recording).length}</p>\n          </div>\n        </div>\n\n        {/* Registration Form Modal */}\n        {showRegistrationForm && selectedEventId && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <h2>Register for Event</h2>\n              <p className=\"registration-info\">\n                Event: <strong>{events.find(e => e.id === selectedEventId)?.title}</strong>\n              </p>\n              <p style={{ fontSize: '0.9rem', color: '#64748b', marginBottom: '1rem' }}>\n                Please fill in your details to register for this event.\n              </p>\n              <form onSubmit={handleRegistrationSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Full Name\"\n                  value={registrationForm.name}\n                  onChange={(e) => setRegistrationForm({...registrationForm, name: e.target.value})}\n                  required\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Department\"\n                  value={registrationForm.department}\n                  onChange={(e) => setRegistrationForm({...registrationForm, department: e.target.value})}\n                  required\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"USN (University Serial Number)\"\n                  value={registrationForm.usn}\n                  onChange={(e) => setRegistrationForm({...registrationForm, usn: e.target.value})}\n                  required\n                />\n                <input\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  value={registrationForm.email}\n                  onChange={(e) => setRegistrationForm({...registrationForm, email: e.target.value})}\n                  required\n                />\n                <div className=\"modal-actions\">\n                  <button type=\"submit\">Register</button>\n                  <button \n                    type=\"button\" \n                    onClick={() => {\n                      setShowRegistrationForm(false);\n                      setSelectedEventId(null);\n                      setRegistrationForm({ name: \"\", department: \"\", usn: \"\", email: \"\" });\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        <div className=\"events-section\">\n          <h2>Available Events</h2>\n          <div className=\"events-grid\">\n            {events.map(event => (\n              <div key={event.id} className={`event-card ${isRegistered(event.id) ? 'registered' : ''}`}>\n                <div className=\"event-header\">\n                  <h3>{event.title}</h3>\n                  {isRegistered(event.id) && (\n                    <span className=\"registered-badge\">Registered</span>\n                  )}\n                </div>\n                <p>{event.description}</p>\n                <div className=\"event-details\">\n                  <span>📅 {event.date}</span>\n                  <span>📍 {event.location}</span>\n                </div>\n                \n                {/* Event Materials */}\n                <div className=\"event-materials\">\n                  {event.slides && (\n                    <div className=\"material-item\">\n                      <span className=\"material-badge slides\">📄 Slides Available</span>\n                      <button \n                        onClick={() => handleDownloadMaterial(event.slides!, 'slide')}\n                        className=\"material-download-btn\"\n                      >\n                        Download\n                      </button>\n                    </div>\n                  )}\n                  {event.recording && (\n                    <div className=\"material-item\">\n                      <span className=\"material-badge recording\">🎥 Recording Available</span>\n                      <button \n                        onClick={() => handleDownloadMaterial(event.recording!, 'recording')}\n                        className=\"material-download-btn\"\n                      >\n                        Download\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"event-actions\">\n                  <button \n                    onClick={() => handleRegister(event.id)}\n                    className={isRegistered(event.id) ? 'unregister-btn' : 'register-btn'}\n                  >\n                    {isRegistered(event.id) ? '❌ Unregister' : '✅ Register'}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {events.length === 0 && (\n          <div className=\"no-events\">\n            <p>No events available at the moment.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}